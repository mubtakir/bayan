// ============================================================================
// ๐ค ูุญุฏุฉ ุงูุฃููุงุน ุงูุฃุณุงุณูุฉ ูููููู - Agent Types Module
// ============================================================================
// ุชุนุฑูู ุฌููุน ุงูุฃููุงุน ูุงูููุงูู ุงููุณุชุฎุฏูุฉ ูู ุงููููู ุงููุณุงุนุฏ

// ============================================================================
// 1. ููุน ุงูููุฉ (Intent Type)
// ============================================================================
struct Intent {
    intent: string,      // ููุน ุงูููุฉ: "run", "compile", "analyze", "suggest", "chat"
    target: string,      // ุงููุณุงุฑ ุฃู ุงูููู ุงููุณุชูุฏู
    code: string,        // ุงูููุฏ ุงููุฑุงุฏ ุชุญูููู
    hint: string,        // ุชูููุญ ุฃู ูุนูููุฉ ุฅุถุงููุฉ
}

// ============================================================================
// 2. ููุน ุงูุงุณุชุฌุงุจุฉ (Response Type)
// ============================================================================
struct Response {
    intent: string,      // ููุน ุงูููุฉ ุงูุฃุตููุฉ
    text: string,        // ุงููุต ุงููุฑุงุฏ ุทุจุงุนุชู
    data: list<string>,  // ุงูุจูุงูุงุช ุงูุฅุถุงููุฉ
    ok: bool,            // ูู ุงูุนูููุฉ ูุฌุญุชุ
}

// ============================================================================
// 3. ููุน ุงูุฅุนุฏุงุฏุงุช (Config Type)
// ============================================================================
struct Config {
    language: string,         // ุงููุบุฉ: "ar" ุฃู "en"
    dry_run: bool,            // ูู ูุนูู ูู ูุถุน ุงููุญุงูุงุฉุ
    bayan_binary: string,     // ูุณุงุฑ ุงูุจุฑูุงูุฌ ุงูุชูููุฐู
    runtime_cwd: string,      // ูุฌูุฏ ุงูุนูู
}

// ============================================================================
// 4. ููุน ุงูุญุฏุซ (Event Type)
// ============================================================================
struct Event {
    intent: string,      // ููุน ุงูููุฉ
    ok: bool,            // ูู ูุฌุญุช ุงูุนูููุฉุ
    timestamp: int,      // ุงูููุช
}

// ============================================================================
// 5. ููุน ุงููููู (Agent Type)
// ============================================================================
struct BayanAgent {
    config: Config,      // ุงูุฅุนุฏุงุฏุงุช
    events: list<Event>, // ุณุฌู ุงูุฃุญุฏุงุซ
}

// ============================================================================
// ุฏูุงู ูุณุงุนุฏุฉ ูุฅูุดุงุก ุงูุฃููุงุน
// ============================================================================

// ุฅูุดุงุก ููุฉ ุฌุฏูุฏุฉ
fn create_intent(intent: string, target: string, code: string, hint: string) -> Intent {
    return Intent {
        intent: intent,
        target: target,
        code: code,
        hint: hint,
    };
}

// ุฅูุดุงุก ุงุณุชุฌุงุจุฉ ุฌุฏูุฏุฉ
fn create_response(intent: string, text: string, ok: bool) -> Response {
    return Response {
        intent: intent,
        text: text,
        data: [],
        ok: ok,
    };
}

// ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุฌุฏูุฏุฉ
fn create_config(language: string, dry_run: bool) -> Config {
    return Config {
        language: language,
        dry_run: dry_run,
        bayan_binary: "target/debug/albayan",
        runtime_cwd: ".",
    };
}

// ุฅูุดุงุก ุญุฏุซ ุฌุฏูุฏ
fn create_event(intent: string, ok: bool) -> Event {
    return Event {
        intent: intent,
        ok: ok,
        timestamp: 0,
    };
}

// ุฅูุดุงุก ูููู ุฌุฏูุฏ
fn create_agent(config: Config) -> BayanAgent {
    return BayanAgent {
        config: config,
        events: [],
    };
}

// ============================================================================
// ุฏูุงู ูุณุงุนุฏุฉ ููุชุญูู
// ============================================================================

// ุงูุชุญูู ูู ุฃู ุงูููุฉ ุตุญูุญุฉ
fn is_valid_intent(intent: string) -> bool {
    if intent == "run" { return true; }
    if intent == "compile" { return true; }
    if intent == "analyze" { return true; }
    if intent == "suggest" { return true; }
    if intent == "chat" { return true; }
    return false;
}

// ุงูุชุญูู ูู ุฃู ุงููุบุฉ ุตุญูุญุฉ
fn is_valid_language(language: string) -> bool {
    if language == "ar" { return true; }
    if language == "en" { return true; }
    return false;
}

// ============================================================================
// ููุงูุฉ ูุญุฏุฉ ุงูุฃููุงุน
// ============================================================================

