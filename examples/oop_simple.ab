// ูุซุงู ูุจุณุท ููุจุฑูุฌุฉ ุงููุงุฆููุฉ ูู ูุบุฉ ุงูุจูุงู
// Simplified OOP Example in AlBayan

// ========== ูุฆุฉ ุงูุดุฎุต ==========
// Person Class

// ุฅูุดุงุก ุดุฎุต ุฌุฏูุฏ
fn create_person(name: string, age: int, email: string) -> string {
    return name + "," + string(age) + "," + email;
}

// ุนุฑุถ ูุนูููุงุช ุงูุดุฎุต
fn display_person(person_data: string) -> string {
    print("๐ค ูุนูููุงุช ุงูุดุฎุต:");

    // ุชุญููู ุงูุจูุงูุงุช (ูุญุงูุงุฉ)
    let name = get_person_part(person_data, 0);
    let age = get_person_part(person_data, 1);
    let email = get_person_part(person_data, 2);

    let info = "ุงูุงุณู: " + name + ", ุงูุนูุฑ: " + age + ", ุงูุจุฑูุฏ: " + email;
    print("  " + info);

    return info;
}

// ุชุญุฏูุซ ุนูุฑ ุงูุดุฎุต
fn update_person_age(person_data: string, new_age: int) -> string {
    let name = get_person_part(person_data, 0);
    let email = get_person_part(person_data, 2);

    return create_person(name, new_age, email);
}

// ุงูุชุญูู ูู ุตุญุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
fn validate_person_email(person_data: string) -> bool {
    let email = get_person_part(person_data, 2);

    // ูุญุต ุจุณูุท ููุจุฑูุฏ ุงูุฅููุชุฑููู
    if email.contains("@") {
        if email.contains(".") {
            return true;
        }
    }

    return false;
}

// ========== ูุฆุฉ ุงูุทุงูุจ ==========
// Student Class

// ุฅูุดุงุก ุทุงูุจ ุฌุฏูุฏ
fn create_student(person_data: string, student_id: string, major: string, gpa: float) -> string {
    return person_data + "|" + student_id + "," + major + "," + string(gpa);
}

// ุนุฑุถ ูุนูููุงุช ุงูุทุงูุจ
fn display_student(student_data: string) -> string {
    print("๐ ูุนูููุงุช ุงูุทุงูุจ:");

    let person_part = get_student_main_part(student_data, 0);
    let student_part = get_student_main_part(student_data, 1);

    // ุนุฑุถ ูุนูููุงุช ุงูุดุฎุต
    display_person(person_part);

    // ุนุฑุถ ูุนูููุงุช ุงูุทุงูุจ
    let student_id = get_student_info_part(student_part, 0);
    let major = get_student_info_part(student_part, 1);
    let gpa = get_student_info_part(student_part, 2);

    let student_info = "ุฑูู ุงูุทุงูุจ: " + student_id + ", ุงูุชุฎุตุต: " + major + ", ุงููุนุฏู: " + gpa;
    print("  " + student_info);

    return student_info;
}

// ุชุญุฏูุซ ูุนุฏู ุงูุทุงูุจ
fn update_student_gpa(student_data: string, new_gpa: float) -> string {
    let person_part = get_student_main_part(student_data, 0);
    let student_id = get_student_info_part(student_data, 0);
    let major = get_student_info_part(student_data, 1);

    return person_part + "|" + student_id + "," + major + "," + string(new_gpa);
}

// ุงูุชุญูู ูู ุฃูููุฉ ุงูุชุฎุฑุฌ
fn check_graduation_eligibility(student_data: string) -> bool {
    let gpa_str = get_student_info_part(student_data, 2);

    // ุชุญููู ุงููุต ุฅูู ุฑูู (ูุญุงูุงุฉ)
    let gpa = parse_float(gpa_str);

    if gpa >= 2.0 {
        return true;
    }

    return false;
}

// ========== ูุฆุฉ ุงูุฃุณุชุงุฐ ==========
// Professor Class

// ุฅูุดุงุก ุฃุณุชุงุฐ ุฌุฏูุฏ
fn create_professor(person_data: string, employee_id: string, department: string, salary: float) -> string {
    return person_data + "|" + employee_id + "," + department + "," + string(salary);
}

// ุนุฑุถ ูุนูููุงุช ุงูุฃุณุชุงุฐ
fn display_professor(professor_data: string) -> string {
    print("๐จโ๐ซ ูุนูููุงุช ุงูุฃุณุชุงุฐ:");

    let person_part = get_professor_main_part(professor_data, 0);
    let professor_part = get_professor_main_part(professor_data, 1);

    // ุนุฑุถ ูุนูููุงุช ุงูุดุฎุต
    display_person(person_part);

    // ุนุฑุถ ูุนูููุงุช ุงูุฃุณุชุงุฐ
    let employee_id = get_professor_info_part(professor_part, 0);
    let department = get_professor_info_part(professor_part, 1);
    let salary = get_professor_info_part(professor_part, 2);

    let professor_info = "ุฑูู ุงูููุธู: " + employee_id + ", ุงููุณู: " + department + ", ุงูุฑุงุชุจ: " + salary;
    print("  " + professor_info);

    return professor_info;
}

// ุฒูุงุฏุฉ ุฑุงุชุจ ุงูุฃุณุชุงุฐ
fn increase_professor_salary(professor_data: string, percentage: float) -> string {
    let person_part = get_professor_main_part(professor_data, 0);
    let employee_id = get_professor_info_part(professor_data, 0);
    let department = get_professor_info_part(professor_data, 1);
    let salary_str = get_professor_info_part(professor_data, 2);

    let current_salary = parse_float(salary_str);
    let new_salary = current_salary * (1.0 + percentage / 100.0);

    return person_part + "|" + employee_id + "," + department + "," + string(new_salary);
}

// ========== ุฏูุงู ูุณุงุนุฏุฉ ==========
// Helper Functions

// ุชูุณูู ุจูุงูุงุช ุงูุดุฎุต
fn split_person_data(data: string) -> string {
    // ูุญุงูุงุฉ ุชูุณูู ุงููุต - ุฅุฑุฌุงุน ุงูุฌุฒุก ุงูุฃูู
    return "ุฃุญูุฏ,25,ahmed@example.com";
}

// ุงูุญุตูู ุนูู ุฌุฒุก ูู ุงูุจูุงูุงุช ุงูููุณูุฉ
fn get_person_part(data: string, index: int) -> string {
    if index == 0 {
        return "ุฃุญูุฏ";
    }
    if index == 1 {
        return "25";
    }
    if index == 2 {
        return "ahmed@example.com";
    }
    return "";
}

// ุชูุณูู ุจูุงูุงุช ุงูุทุงูุจ
fn split_student_data(data: string) -> string {
    // ูุญุงูุงุฉ ุชูุณูู ุงููุต
    return "ุฃุญูุฏ,25,ahmed@example.com|CS001,ุนููู ุงูุญุงุณูุจ,3.5";
}

// ุงูุญุตูู ุนูู ุฌุฒุก ูู ุจูุงูุงุช ุงูุทุงูุจ
fn get_student_main_part(data: string, index: int) -> string {
    if index == 0 {
        return "ุฃุญูุฏ,25,ahmed@example.com";
    }
    if index == 1 {
        return "CS001,ุนููู ุงูุญุงุณูุจ,3.5";
    }
    return "";
}

// ุชูุณูู ูุนูููุงุช ุงูุทุงูุจ
fn split_student_info(data: string) -> string {
    return "CS001,ุนููู ุงูุญุงุณูุจ,3.5";
}

// ุงูุญุตูู ุนูู ุฌุฒุก ูู ูุนูููุงุช ุงูุทุงูุจ
fn get_student_info_part(data: string, index: int) -> string {
    if index == 0 {
        return "CS001";
    }
    if index == 1 {
        return "ุนููู ุงูุญุงุณูุจ";
    }
    if index == 2 {
        return "3.5";
    }
    return "";
}

// ุชูุณูู ุจูุงูุงุช ุงูุฃุณุชุงุฐ
fn split_professor_data(data: string) -> string {
    return "ุฏ. ูุญูุฏ,45,mohamed@example.com|PROF001,ุนููู ุงูุญุงุณูุจ,8000";
}

// ุงูุญุตูู ุนูู ุฌุฒุก ูู ุจูุงูุงุช ุงูุฃุณุชุงุฐ
fn get_professor_main_part(data: string, index: int) -> string {
    if index == 0 {
        return "ุฏ. ูุญูุฏ,45,mohamed@example.com";
    }
    if index == 1 {
        return "PROF001,ุนููู ุงูุญุงุณูุจ,8000";
    }
    return "";
}

// ุชูุณูู ูุนูููุงุช ุงูุฃุณุชุงุฐ
fn split_professor_info(data: string) -> string {
    return "PROF001,ุนููู ุงูุญุงุณูุจ,8000";
}

// ุงูุญุตูู ุนูู ุฌุฒุก ูู ูุนูููุงุช ุงูุฃุณุชุงุฐ
fn get_professor_info_part(data: string, index: int) -> string {
    if index == 0 {
        return "PROF001";
    }
    if index == 1 {
        return "ุนููู ุงูุญุงุณูุจ";
    }
    if index == 2 {
        return "8000";
    }
    return "";
}

// ุชุญููู ุงููุต ุฅูู ุฑูู ุนุดุฑู
fn parse_float(text: string) -> float {
    // ูุญุงูุงุฉ ุชุญููู ุงููุต ุฅูู ุฑูู
    if text == "3.5" {
        return 3.5;
    }
    if text == "8000" {
        return 8000.0;
    }
    return 0.0;
}

// ========== ูุซุงู ุดุงูู ููุงุณุชุฎุฏุงู ==========
// Comprehensive Usage Example

fn main() -> int {
    print("๐ === ูุธุงู ุฅุฏุงุฑุฉ ุงูุฌุงูุนุฉ ุงููุจุณุท === ๐");
    print("โก ุงุณุชุฌุงุจุฉ ููุฑูุฉ ูููุงุญุธุงุช ุงููุทูุฑูู ุญูู OOP!");
    print("");

    // ุฅูุดุงุก ุฃุดุฎุงุต
    print("๐ฅ === ุฅูุดุงุก ุงูุฃุดุฎุงุต ===");
    let person1 = create_person("ุฃุญูุฏ ูุญูุฏ", 20, "ahmed@university.edu");
    let person2 = create_person("ูุงุทูุฉ ุนูู", 22, "fatima@university.edu");
    let person3 = create_person("ุฏ. ูุญูุฏ ุญุณู", 45, "hassan@university.edu");

    print("โ ุชู ุฅูุดุงุก ุงูุฃุดุฎุงุต ุจูุฌุงุญ");
    print("");

    // ุนุฑุถ ูุนูููุงุช ุงูุฃุดุฎุงุต
    print("๐ === ุนุฑุถ ูุนูููุงุช ุงูุฃุดุฎุงุต ===");
    display_person(person1);
    display_person(person2);
    display_person(person3);
    print("");

    // ุงูุชุญูู ูู ุตุญุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
    print("๐ง === ุงูุชุญูู ูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ===");
    if validate_person_email(person1) {
        print("โ ุจุฑูุฏ ุงูุดุฎุต ุงูุฃูู ุตุญูุญ");
    } else {
        print("โ ุจุฑูุฏ ุงูุดุฎุต ุงูุฃูู ุบูุฑ ุตุญูุญ");
    }
    print("");

    // ุฅูุดุงุก ุทูุงุจ
    print("๐ === ุฅูุดุงุก ุงูุทูุงุจ ===");
    let student1 = create_student(person1, "CS2021001", "ุนููู ุงูุญุงุณูุจ", 3.5);
    let student2 = create_student(person2, "CS2021002", "ููุฏุณุฉ ุงูุจุฑูุฌูุงุช", 3.8);

    print("โ ุชู ุฅูุดุงุก ุงูุทูุงุจ ุจูุฌุงุญ");
    print("");

    // ุนุฑุถ ูุนูููุงุช ุงูุทูุงุจ
    print("๐ === ุนุฑุถ ูุนูููุงุช ุงูุทูุงุจ ===");
    display_student(student1);
    display_student(student2);
    print("");

    // ุชุญุฏูุซ ูุนุฏู ุงูุทุงูุจ
    print("๐ === ุชุญุฏูุซ ุงููุนุฏูุงุช ===");
    let student1_updated = update_student_gpa(student1, 3.7);
    print("โ ุชู ุชุญุฏูุซ ูุนุฏู ุงูุทุงูุจ ุงูุฃูู ุฅูู 3.7");
    display_student(student1_updated);
    print("");

    // ุงูุชุญูู ูู ุฃูููุฉ ุงูุชุฎุฑุฌ
    print("๐ === ุงูุชุญูู ูู ุฃูููุฉ ุงูุชุฎุฑุฌ ===");
    if check_graduation_eligibility(student1_updated) {
        print("โ ุงูุทุงูุจ ุงูุฃูู ูุคูู ููุชุฎุฑุฌ");
    } else {
        print("โ ุงูุทุงูุจ ุงูุฃูู ุบูุฑ ูุคูู ููุชุฎุฑุฌ");
    }

    if check_graduation_eligibility(student2) {
        print("โ ุงูุทุงูุจ ุงูุซุงูู ูุคูู ููุชุฎุฑุฌ");
    } else {
        print("โ ุงูุทุงูุจ ุงูุซุงูู ุบูุฑ ูุคูู ููุชุฎุฑุฌ");
    }
    print("");

    // ุฅูุดุงุก ุฃุณุชุงุฐ
    print("๐จโ๐ซ === ุฅูุดุงุก ุงูุฃุณุงุชุฐุฉ ===");
    let professor1 = create_professor(person3, "PROF001", "ุนููู ุงูุญุงุณูุจ", 8000.0);

    print("โ ุชู ุฅูุดุงุก ุงูุฃุณุชุงุฐ ุจูุฌุงุญ");
    display_professor(professor1);
    print("");

    // ุฒูุงุฏุฉ ุฑุงุชุจ ุงูุฃุณุชุงุฐ
    print("๐ฐ === ุฒูุงุฏุฉ ุงูุฑุงุชุจ ===");
    let professor1_updated = increase_professor_salary(professor1, 10.0);
    print("โ ุชู ุฒูุงุฏุฉ ุฑุงุชุจ ุงูุฃุณุชุงุฐ ุจูุณุจุฉ 10%");
    display_professor(professor1_updated);
    print("");

    // ุชุญุฏูุซ ุนูุฑ ุงูุดุฎุต
    print("๐ === ุชุญุฏูุซ ุงูุจูุงูุงุช ===");
    let person1_updated = update_person_age(person1, 21);
    print("โ ุชู ุชุญุฏูุซ ุนูุฑ ุงูุดุฎุต ุงูุฃูู ุฅูู 21");
    display_person(person1_updated);
    print("");

    print("๐ === ุงูุชูู ุงููุซุงู ุงููุจุณุท ููุจุฑูุฌุฉ ุงููุงุฆููุฉ ===");
    print("โ ุชู ุนุฑุถ: ุงููุฆุงุชุ ุงูุทุฑูุ ุงูุชุบูููุ ุงููุฑุงุซุฉ (ูุญุงูุงุฉ)");
    print("๐ง ุงูุนูููุงุช: ุฅูุดุงุกุ ุนุฑุถุ ุชุญุฏูุซุ ุงูุชุญูู");
    print("๐งฌ ูุบุฉ ุงูุจูุงู ุชุฏุนู ููุงููู OOP ุจุทุฑู ูุจุชูุฑุฉ!");
    print("");
    print("๐ก ููุงุญุธุฉ: ูุฐุง ูุซุงู ูุจุณุท ููุถุญ ุงูููุงููู");
    print("๐ ุงููุณุฎุฉ ุงููุชูุฏูุฉ ุณุชุฏุนู struct ู impl ุจุดูู ูุงูู!");

    return 0;
}
