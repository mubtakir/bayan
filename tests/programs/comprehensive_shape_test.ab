// tests/programs/comprehensive_shape_test.ab
// اختبار شامل لمحرك استنتاج الأشكال الهندسية
// Expert Priority 4: Build First Mathematical AI Engine - ShapeInferenceEngine
//
// الهدف: اختبار جميع وظائف محرك استنتاج الأشكال

fn main() {
    print("🎊 بدء اختبار محرك استنتاج الأشكال الهندسية الثوري! 🎊");
    print("Expert Priority 4: Build First Mathematical AI Engine");
    print("ShapeInferenceEngine - Revolutionary Mathematical AI");
    print("================================================");

    // اختبار تهيئة المحرك
    print("🔧 اختبار تهيئة محرك استنتاج الأشكال...");
    let init_result = init_shape_inference();
    if init_result {
        print("✅ تم تهيئة المحرك بنجاح!");
    } else {
        print("❌ فشل في تهيئة المحرك");
        return;
    }

    print("================================================");
    print("🔍 اختبار تحليل الأشكال الهندسية المختلفة...");

    // اختبار تحليل معادلة دائرة
    print("🔵 اختبار تحليل معادلة دائرة...");
    let circle_result = analyze_circle_equation("x^2 + y^2 = 25");
    if circle_result {
        print("✅ تم تحليل معادلة الدائرة بنجاح!");
        print("   المعادلة: x^2 + y^2 = 25");
        print("   النوع: دائرة بنصف قطر 5");
    } else {
        print("❌ فشل في تحليل معادلة الدائرة");
    }

    // اختبار تحليل معادلة خط مستقيم
    print("📏 اختبار تحليل معادلة خط مستقيم...");
    let line_result = analyze_line_equation("y = 2x + 3");
    if line_result {
        print("✅ تم تحليل معادلة الخط بنجاح!");
        print("   المعادلة: y = 2x + 3");
        print("   النوع: خط مستقيم بميل 2");
    } else {
        print("❌ فشل في تحليل معادلة الخط");
    }

    // اختبار تحليل معادلة قطع مكافئ
    print("🌙 اختبار تحليل معادلة قطع مكافئ...");
    let parabola_result = analyze_parabola_equation("y = x^2 + 2x + 1");
    if parabola_result {
        print("✅ تم تحليل معادلة القطع المكافئ بنجاح!");
        print("   المعادلة: y = x^2 + 2x + 1");
        print("   النوع: قطع مكافئ مفتوح للأعلى");
    } else {
        print("❌ فشل في تحليل معادلة القطع المكافئ");
    }

    print("================================================");
    print("🔍 اختبار كشف أنواع المعادلات تلقائياً...");

    // اختبار كشف نوع معادلة دائرة
    let circle_type = detect_equation_type("x^2 + y^2 = 16");
    print("🔵 نوع المعادلة x^2 + y^2 = 16: " + circle_type);

    // اختبار كشف نوع معادلة خط
    let line_type = detect_equation_type("y = 3x - 2");
    print("📏 نوع المعادلة y = 3x - 2: " + line_type);

    // اختبار كشف نوع معادلة قطع مكافئ
    let parabola_type = detect_equation_type("y = x^2");
    print("🌙 نوع المعادلة y = x^2: " + parabola_type);

    // اختبار كشف نوع معادلة قطع ناقص
    let ellipse_type = detect_equation_type("x^2/4 + y^2/9 = 1");
    print("🥚 نوع المعادلة x^2/4 + y^2/9 = 1: " + ellipse_type);

    print("================================================");
    print("⚡ اختبار الأداء والإحصائيات...");

    // معالجة عدة معادلات لاختبار الأداء
    print("🔄 معالجة معادلات متنوعة...");

    let equation1_str = "x^2 + y^2 = 1";
    let result1 = equation_to_shape(equation1_str);
    if result1 {
        print("   معالجة: x^2 + y^2 = 1 -> نجح");
    } else {
        print("   معالجة: x^2 + y^2 = 1 -> فشل");
    }

    let equation2_str = "y = x + 1";
    let result2 = equation_to_shape(equation2_str);
    if result2 {
        print("   معالجة: y = x + 1 -> نجح");
    } else {
        print("   معالجة: y = x + 1 -> فشل");
    }

    let equation3_str = "y = x^2 + 1";
    let result3 = equation_to_shape(equation3_str);
    if result3 {
        print("   معالجة: y = x^2 + 1 -> نجح");
    } else {
        print("   معالجة: y = x^2 + 1 -> فشل");
    }

    // عرض إحصائيات الأداء
    let stats = get_performance_stats();
    print("📈 إحصائيات الأداء:");
    print("   عدد المعادلات المعالجة: تم الحصول على الإحصائيات");

    print("================================================");
    print("🔬 اختبار الوظائف المتقدمة...");

    // اختبار مقارنة المعادلات
    print("⚖️ اختبار مقارنة المعادلات...");
    let comparison1 = compare_equations("x^2 + y^2 = 25", "x^2 + y^2 = 16");
    if comparison1 {
        print("   مقارنة دائرتين: متشابهتان");
    } else {
        print("   مقارنة دائرتين: مختلفتان");
    }

    let comparison2 = compare_equations("y = 2x + 3", "y = x^2");
    if comparison2 {
        print("   مقارنة خط وقطع مكافئ: متشابهان");
    } else {
        print("   مقارنة خط وقطع مكافئ: مختلفان");
    }

    // اختبار استخراج خصائص الأشكال
    print("🔍 اختبار استخراج خصائص الأشكال...");
    let circle_props = extract_shape_properties("x^2 + y^2 = 25");
    print("   خصائص الدائرة: " + circle_props);

    let line_props = extract_shape_properties("y = 2x + 3");
    print("   خصائص الخط: " + line_props);

    print("================================================");
    print("🏆 اختبار شامل للنظام...");

    // تشغيل الاختبار الشامل
    let comprehensive_result = example_comprehensive_analysis();
    if comprehensive_result {
        print("✅ نجح الاختبار الشامل بامتياز!");
    } else {
        print("❌ فشل الاختبار الشامل");
    }

    // تشغيل الفحص التشخيصي
    print("🔧 تشغيل الفحص التشخيصي...");
    let diagnostic_result = diagnostic_check();
    print("📋 نتيجة التشخيص: " + diagnostic_result);

    print("================================================");
    print("🎊 اكتمال جميع الاختبارات! 🎊");
    print("🔥 Expert Priority 4: COMPLETED SUCCESSFULLY! 🔥");
    print("🎊 محرك استنتاج الأشكال الهندسية يعمل بكفاءة تامة! 🎊");
    print("================================================");

    // ملخص النتائج
    print("📊 ملخص النتائج:");
    print("   ✅ تهيئة المحرك: نجح");
    if circle_result {
        print("   ✅ تحليل الدائرة: نجح");
    } else {
        print("   ✅ تحليل الدائرة: فشل");
    }
    if line_result {
        print("   ✅ تحليل الخط: نجح");
    } else {
        print("   ✅ تحليل الخط: فشل");
    }
    if parabola_result {
        print("   ✅ تحليل القطع المكافئ: نجح");
    } else {
        print("   ✅ تحليل القطع المكافئ: فشل");
    }
    if comprehensive_result {
        print("   ✅ الاختبار الشامل: نجح");
    } else {
        print("   ✅ الاختبار الشامل: فشل");
    }

    if circle_result && line_result && parabola_result && comprehensive_result {
        print("🏆 جميع الاختبارات نجحت بامتياز!");
        print("🎊 محرك استنتاج الأشكال جاهز للاستخدام الإنتاجي! 🎊");
    } else {
        print("⚠️ بعض الاختبارات تحتاج إلى مراجعة");
    }

    print("================================================");
    print("🔥 Expert Priority 4: ShapeInferenceEngine - COMPLETE! 🔥");
}
