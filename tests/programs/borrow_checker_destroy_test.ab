fn test_list_destruction() -> int {
    let my_list = [1, 2, 3];
    let another_list = [4, 5, 6];

    // Use the lists
    let len1 = my_list.len();
    let len2 = another_list.len();

    // Lists should be automatically destroyed when going out of scope
    return len1 + len2;
}

fn test_nested_scopes() -> int {
    let outer_list = [10, 20];
    let outer_len = outer_list.len();
    // outer_list should be destroyed at function end
    return outer_len;
}

fn main() -> int {
    let result1 = test_list_destruction();
    let result2 = test_nested_scopes();
    return result1 + result2;
}
